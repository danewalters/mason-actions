---
name: Test mason-registry
description: Test mason-registry package definitions.

inputs:
  target:
    required: true
    description: The target platform to test (e.g. "darwin_x64").
  packages:
    required: true
    description: The packages to test (space separated string).

runs:
  using: composite
  steps:
    - shell: bash
      id: prepare
      run: $GITHUB_ACTION_PATH/prepare.sh
      env:
        PACKAGES: ${{ inputs.packages }}

    - if: ${{ steps.prepare.outputs.setup_beam == 'true' }}
      uses: erlef/setup-beam@v1
      with:
        otp-version: '24'
        elixir-version: '1.14'
        rebar3-version: '3'

    - if: ${{ steps.prepare.outputs.setup_nix == 'true' }}
      uses: cachix/install-nix-action@v18
      with:
        nix_path: nixpkgs=channel:nixos-unstable

    - if: ${{ steps.prepare.outputs.setup_nim == 'true' }}
      uses: jiro4989/setup-nim-action@v1

    - if: ${{ steps.prepare.outputs.PACKAGES != '' }}
      uses: actions/setup-go@v3
      with:
        go-version: '>=1.17.0'

    - if: ${{ runner.os == 'Windows' && steps.prepare.outputs.PACKAGES != '' }}
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: '3.1'

    - if: ${{ runner.os == 'macOS' && steps.prepare.outputs.PACKAGES != '' }}
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - if: ${{ steps.prepare.outputs.PACKAGES != '' }}
      shell: bash
      run: |
        git clone https://github.com/williamboman/mason.nvim "$GITHUB_ACTION_PATH/mason.nvim"
        git -C "$GITHUB_ACTION_PATH/mason.nvim" fetch origin static-registry
        git -C "$GITHUB_ACTION_PATH/mason.nvim" checkout FETCH_HEAD

    - if: ${{ steps.prepare.outputs.PACKAGES != '' }}
      uses: rhysd/action-setup-vim@v1
      with:
        neovim: true
        version: v0.8.0

    - if: ${{ steps.prepare.outputs.PACKAGES != '' }}
      run: nvim --headless -c "luafile $GITHUB_ACTION_PATH/test-runner.lua" -c 1cq
      shell: bash
      env:
        PACKAGES: ${{ steps.prepare.outputs.PACKAGES }}
        TARGET: ${{ inputs.target }}
